openapi: 3.0.2
info:
  contact:
    email: thomas.schaffter@sagebionetworks.org
    url: https://data2health.github.io/nlp-sandbox-schemas
  description: |
    The OpenAPI specification implemented by NLP Sandbox Person Name Annotators.
    # Overview
    This NLP tool detects references of person names in the clinical notes given as input and returns a list of person name annotations.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: NLP Sandbox Person Name Annotator API
  version: 1.0.0
  x-logo:
    url: https://data2health.github.io/nlp-sandbox-schemas/logo.png
servers:
- url: http://example.com/api/v1
- url: https://example.com/api/v1
tags:
- description: Operations about person names
  name: Person Name
- description: Operations about API health
  name: Health
paths:
  /health:
    get:
      description: Get the health of the API
      operationId: health
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'
          description: Success
        "403":
          description: Forbidden
        "404":
          description: Note not found
      summary: Get Health
      tags:
      - Health
      x-openapi-router-controller: openapi_server.controllers.health_controller
  /person-names:
    get:
      description: Returns the person name annotations
      operationId: person_names_read_all
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Note'
              type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PersonNameAnnotation'
                type: array
          description: Success
        "403":
          description: Forbidden
      summary: Get all person name annotations
      tags:
      - Person Name
      x-openapi-router-controller: openapi_server.controllers.person_name_controller
components:
  schemas:
    Email:
      description: User email address
      example: john.smith@example.com
      format: test
      type: string
    User:
      properties:
        username:
          example: John78
          minLength: 4
          type: string
        firstName:
          example: John
          type: string
        lastName:
          example: Smith
          type: string
        email:
          description: User email address
          example: john.smith@example.com
          format: test
          type: string
      required:
      - email
      - firstName
      - lastName
      - username
      type: object
    Entity:
      properties:
        id:
          description: ID
          type: integer
        createdBy:
          $ref: '#/components/schemas/User'
        createdAt:
          description: When the entity has been created
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/User'
        updatedAt:
          description: When the entity has been updated
          format: date-time
          type: string
      required:
      - id
      type: object
    PatientPublicId:
      description: The patient public ID
      example: 4f6cf35x-2c4y-483z-a0a9-158621f77a21
      maxLength: 50
      type: string
    Note:
      allOf:
      - $ref: '#/components/schemas/Entity'
      description: A clinical note
      example:
        filename: 260-01.xml
        text: October 3, Ms Chloe Price met with...
        type: pathology
        patientPublicId: ""
      properties:
        text:
          description: The content of the note
          example: October 3, Ms Chloe Price met with...
          type: string
        patientPublicId:
          allOf:
          - $ref: '#/components/schemas/PatientPublicId'
          readOnly: true
        filename:
          description: The filename of the source note
          example: 260-01.xml
          type: string
        type:
          description: The note type
          enum:
          - pathology
          - phone_call
          type: string
      required:
      - text
      type: object
    Annotation:
      allOf:
      - $ref: '#/components/schemas/Entity'
      description: An annotation in a text
      properties:
        noteId:
          description: The note ID
          type: integer
        start:
          description: The position of the first character
          type: integer
        length:
          description: The length of the annotation
          type: integer
        text:
          description: The string annotated
          type: string
      required:
      - length
      - noteId
      - start
      type: object
    PersonNameAnnotation:
      allOf:
      - $ref: '#/components/schemas/Annotation'
      description: A person name annotation in a text
      type: object
    Health:
      example:
        status: pass
      properties:
        status:
          description: Health status
          enum:
          - pass
          - warn
          type: string
      type: object
